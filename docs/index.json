[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/app.js",
    "content": "/* eslint-disable linebreak-style */\r\n\r\nconst express = require('express');\r\n\r\nconst app = express();\r\n\r\nconst bodyParser = require('body-parser');\r\n\r\nconst jsonParser = bodyParser.json();\r\n\r\nmodule.exports = (routes) => {\r\n  routes.map((route) => {\r\n    switch (route.method) {\r\n      case 'POST':\r\n        app.post(route.link, jsonParser, route.callback);\r\n        break;\r\n      default:\r\n        app.get(route.link, route.callback);\r\n    }\r\n    return route;\r\n  });\r\n\r\n  return app;\r\n};\r\n",
    "static": true,
    "longname": "D:/Projects/raph/backend-coding-test-master/src/app.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "express",
    "memberof": "src/app.js",
    "static": true,
    "longname": "src/app.js~express",
    "access": "public",
    "export": false,
    "importPath": "backend-coding-test/src/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "app",
    "memberof": "src/app.js",
    "static": true,
    "longname": "src/app.js~app",
    "access": "public",
    "export": false,
    "importPath": "backend-coding-test/src/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "bodyParser",
    "memberof": "src/app.js",
    "static": true,
    "longname": "src/app.js~bodyParser",
    "access": "public",
    "export": false,
    "importPath": "backend-coding-test/src/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "jsonParser",
    "memberof": "src/app.js",
    "static": true,
    "longname": "src/app.js~jsonParser",
    "access": "public",
    "export": false,
    "importPath": "backend-coding-test/src/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "src/logger.js",
    "content": "/* eslint-disable linebreak-style */\r\nconst fs = require('fs');\r\nconst Winston = require('winston');\r\nconst { format } = require('winston');\r\n\r\nmodule.exports = () => {\r\n  const stream = fs.createWriteStream(`logs/${Math.floor(new Date() / 1000)}.log`);\r\n  const logger = Winston.createLogger({\r\n    format: format.combine(\r\n      format.timestamp(),\r\n      format.json(),\r\n    ),\r\n    transports: [\r\n      new Winston.transports.File({ stream }),\r\n      new Winston.transports.Console(),\r\n    ],\r\n  });\r\n\r\n  Winston.addColors({\r\n    error: 'red',\r\n    warn: 'yellow',\r\n    info: 'cyan',\r\n    debug: 'green',\r\n  });\r\n\r\n  return logger;\r\n};\r\n",
    "static": true,
    "longname": "D:/Projects/raph/backend-coding-test-master/src/logger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "fs",
    "memberof": "src/logger.js",
    "static": true,
    "longname": "src/logger.js~fs",
    "access": "public",
    "export": false,
    "importPath": "backend-coding-test/src/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "Winston",
    "memberof": "src/logger.js",
    "static": true,
    "longname": "src/logger.js~Winston",
    "access": "public",
    "export": false,
    "importPath": "backend-coding-test/src/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "format",
    "memberof": "src/logger.js",
    "static": true,
    "longname": "src/logger.js~format",
    "access": "public",
    "export": false,
    "importPath": "backend-coding-test/src/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "src/routes.js",
    "content": "/* eslint-disable linebreak-style */\r\nconst logger = require('./logger')();\r\n\r\nmodule.exports = (db) => [\r\n  {\r\n    link: '/health',\r\n    method: 'GET',\r\n    tags: ['Health'],\r\n    description: 'Checks system status',\r\n    responses: {\r\n      200: {\r\n        description: 'OK',\r\n      },\r\n    },\r\n    callback: (_, res) => {\r\n      logger.info('GET /health OK');\r\n      res.send('Healthy');\r\n    },\r\n  },\r\n  {\r\n    link: '/rides',\r\n    method: 'POST',\r\n    tags: ['Rides'],\r\n    description: 'Create new ride in the system',\r\n    parameters: [\r\n      {\r\n        name: 'body',\r\n        in: 'body',\r\n      },\r\n    ],\r\n    responses: {\r\n      200: {\r\n        description: 'New ride is created',\r\n      },\r\n    },\r\n    callback: (req, res) => {\r\n      const startLatitude = Number(req.body.start_lat);\r\n      const startLongitude = Number(req.body.start_long);\r\n      const endLatitude = Number(req.body.end_lat);\r\n      const endLongitude = Number(req.body.end_long);\r\n      const riderName = req.body.rider_name;\r\n      const driverName = req.body.driver_name;\r\n      const driverVehicle = req.body.driver_vehicle;\r\n\r\n      if (startLatitude < -90 || startLatitude > 90) {\r\n        if (startLongitude < -180 || startLongitude > 180) {\r\n          logger.error('[VALIDATION_ERROR] Start latitude and longitude must be between -90 - 90 and -180 to 180 degrees respectively');\r\n          return res.status(500).send({\r\n            error_code: 'VALIDATION_ERROR',\r\n            message: 'Start latitude and longitude must be between -90 - 90 and -180 to 180 degrees respectively',\r\n          });\r\n        }\r\n      }\r\n\r\n      if (endLatitude < -90 || endLatitude > 90 || endLongitude < -180 || endLongitude > 180) {\r\n        logger.error('[VALIDATION_ERROR] End latitude and longitude must be between -90 - 90 and -180 to 180 degrees respectively');\r\n        return res.status(500).send({\r\n          error_code: 'VALIDATION_ERROR',\r\n          message: 'End latitude and longitude must be between -90 - 90 and -180 to 180 degrees respectively',\r\n        });\r\n      }\r\n\r\n      if (typeof riderName !== 'string' || riderName.length < 1) {\r\n        logger.error('[VALIDATION_ERROR] Rider name must be a non empty string');\r\n        return res.status(500).send({\r\n          error_code: 'VALIDATION_ERROR',\r\n          message: 'Rider name must be a non empty string',\r\n        });\r\n      }\r\n\r\n      if (typeof driverName !== 'string' || driverName.length < 1) {\r\n        logger.error('VALIDATION_ERROR');\r\n        return res.status(500).send({\r\n          error_code: 'VALIDATION_ERROR',\r\n          message: 'Driver name must be a non empty string',\r\n        });\r\n      }\r\n\r\n      if (typeof driverVehicle !== 'string' || driverVehicle.length < 1) {\r\n        logger.error('[VALIDATION_ERROR] Driver vehicle must be a non empty string');\r\n        return res.status(500).send({\r\n          error_code: 'VALIDATION_ERROR',\r\n          message: 'Driver vehicle must be a non empty string',\r\n        });\r\n      }\r\n\r\n      const values = [...Object.values(req.body)];\r\n\r\n      const fields = 'Rides(startLat, startLong, endLat, endLong, riderName, driverName, driverVehicle)';\r\n      db.run(`INSERT INTO ${fields} VALUES (?, ?, ?, ?, ?, ?, ?)`, values, (err) => {\r\n        if (err) {\r\n          logger.error(`[SERVER_ERROR] ${err}`);\r\n          return res.status(500).send({\r\n            error_code: 'SERVER_ERROR',\r\n            message: 'Unknown error',\r\n          });\r\n        }\r\n\r\n        db.all('SELECT * FROM Rides WHERE rideID = ?', this.lastID, (err2, rows) => {\r\n          if (err2) {\r\n            logger.error('[SERVER_ERROR] Unknown error');\r\n            return res.status(500).send({\r\n              error_code: 'SERVER_ERROR',\r\n              message: 'Unknown error',\r\n            });\r\n          }\r\n          logger.info('POST /rides New ride is created');\r\n          return res.send(rows);\r\n        });\r\n      });\r\n    },\r\n  },\r\n  {\r\n    link: '/rides',\r\n    method: 'GET',\r\n    tags: ['Rides'],\r\n    description: 'Get all rides from the system',\r\n    responses: {\r\n      200: {\r\n        description: 'OK',\r\n      },\r\n    },\r\n    callback: (_, res) => {\r\n      db.all('SELECT * FROM Rides', (err, rows) => {\r\n        if (err) {\r\n          logger.error('[SERVER_ERROR] Unknown error');\r\n          return res.status(500).send({\r\n            error_code: 'SERVER_ERROR',\r\n            message: 'Unknown error',\r\n          });\r\n        }\r\n\r\n        if (rows.length === 0) {\r\n          logger.error('[RIDES_NOT_FOUND_ERROR] Could not find any rides');\r\n          return res.status(500).send({\r\n            error_code: 'RIDES_NOT_FOUND_ERROR',\r\n            message: 'Could not find any rides',\r\n          });\r\n        }\r\n\r\n        logger.info('GET /rides OK');\r\n        return res.send(rows);\r\n      });\r\n    },\r\n  },\r\n  {\r\n    link: '/rides/:id',\r\n    method: 'GET',\r\n    tags: ['Rides'],\r\n    description: 'Get specific ride from the system',\r\n    parameters: [\r\n      {\r\n        name: 'id',\r\n        schema: {\r\n          type: 'integer',\r\n        },\r\n        in: 'path',\r\n      },\r\n    ],\r\n    responses: {\r\n      200: {\r\n        description: 'OK',\r\n      },\r\n    },\r\n    callback: (req, res) => {\r\n      db.all(`SELECT * FROM Rides WHERE rideID='${req.params.id}'`, (err, rows) => {\r\n        if (err) {\r\n          logger.error(`[SERVER_ERROR] ${err}`);\r\n          return res.status(500).send({\r\n            error_code: 'SERVER_ERROR',\r\n            message: 'Unknown error',\r\n          });\r\n        }\r\n\r\n        if (rows.length === 0) {\r\n          logger.error('[RIDES_NOT_FOUND_ERROR] Could not find any rides');\r\n          return res.status(500).send({\r\n            error_code: 'RIDES_NOT_FOUND_ERROR',\r\n            message: 'Could not find any rides',\r\n          });\r\n        }\r\n\r\n        logger.info(`GET /rides/${req.params.id} OK`);\r\n        return res.send(rows);\r\n      });\r\n    },\r\n  },\r\n];\r\n",
    "static": true,
    "longname": "D:/Projects/raph/backend-coding-test-master/src/routes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "logger",
    "memberof": "src/routes.js",
    "static": true,
    "longname": "src/routes.js~logger",
    "access": "public",
    "export": false,
    "importPath": "backend-coding-test/src/routes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/schemas.js",
    "content": "/* eslint-disable linebreak-style */\r\nmodule.exports = (db) => {\r\n  const createRideTableSchema = `\r\n        CREATE TABLE Rides\r\n        (\r\n        rideID INTEGER PRIMARY KEY AUTOINCREMENT,\r\n        startLat DECIMAL NOT NULL,\r\n        startLong DECIMAL NOT NULL,\r\n        endLat DECIMAL NOT NULL,\r\n        endLong DECIMAL NOT NULL,\r\n        riderName TEXT NOT NULL,\r\n        driverName TEXT NOT NULL,\r\n        driverVehicle TEXT NOT NULL,\r\n        created DATETIME default CURRENT_TIMESTAMP\r\n        )\r\n    `;\r\n\r\n  db.run(createRideTableSchema);\r\n\r\n  return db;\r\n};\r\n",
    "static": true,
    "longname": "D:/Projects/raph/backend-coding-test-master/src/schemas.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "file",
    "name": "src/swagger.js",
    "content": "/* eslint-disable linebreak-style */\r\nconst fs = require('fs');\r\nconst logger = require('./logger')();\r\n\r\nconst pjson = require('../package.json');\r\n\r\nmodule.exports = (port, routes) => {\r\n  const data = {\r\n    swagger: '2.0',\r\n    info: {\r\n      version: pjson.version,\r\n      title: pjson.name,\r\n      description: pjson.description,\r\n    },\r\n    host: `localhost:${port}`,\r\n    basePath: '',\r\n    tags: [],\r\n    schemes: ['http'],\r\n    consumes: ['application/json'],\r\n    produces: ['application/json'],\r\n    paths: {},\r\n  };\r\n\r\n  routes.map((route) => {\r\n    if (data.paths[route.link] == null) {\r\n      data.paths[route.link] = {};\r\n    }\r\n\r\n    data.paths[route.link][route.method.toLowerCase()] = {\r\n      tags: route.tags,\r\n      summary: route.description,\r\n      responses: route.responses,\r\n      requestBody: route.requestBody,\r\n      parameters: route.parameters,\r\n    };\r\n\r\n    return route;\r\n  });\r\n\r\n  fs.writeFileSync('swagger.json', JSON.stringify(data), 'utf8', (err) => {\r\n    if (err) {\r\n      logger.error(err);\r\n      throw err;\r\n    }\r\n  });\r\n};\r\n",
    "static": true,
    "longname": "D:/Projects/raph/backend-coding-test-master/src/swagger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "name": "fs",
    "memberof": "src/swagger.js",
    "static": true,
    "longname": "src/swagger.js~fs",
    "access": "public",
    "export": false,
    "importPath": "backend-coding-test/src/swagger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "logger",
    "memberof": "src/swagger.js",
    "static": true,
    "longname": "src/swagger.js~logger",
    "access": "public",
    "export": false,
    "importPath": "backend-coding-test/src/swagger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "pjson",
    "memberof": "src/swagger.js",
    "static": true,
    "longname": "src/swagger.js~pjson",
    "access": "public",
    "export": false,
    "importPath": "backend-coding-test/src/swagger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "kind": "index",
    "content": "# Xendit Coding Exercise\n\nThe goal of these exercises are to assess your proficiency in software engineering that is related to the daily work that we do at Xendit. Please follow the instructions below to complete the assessment.\n\n## Setup\n\n1. Create a new repository in your own github profile named `backend-coding-test` and commit the contents of this folder\n2. Ensure `node (>8.6 and <= 10)` and `npm` are installed\n3. Run `npm install`\n4. Run `npm test`\n5. Run `npm start`\n6. Hit the server to test health `curl localhost:8010/health` and expect a `200` response \n\n## Tasks\n\nBelow will be your set of tasks to accomplish. Please work on each of these tasks in order. Success criteria will be defined clearly for each task\n\n1. [Documentation](#documentation)\n2. [Implement Tooling](#implement-tooling)\n3. [Implement Pagination](#implement-pagination)\n4. [Refactoring](#refactoring)\n5. [Security](#security)\n6. [Load Testing](#load-testing)\n\n### Documentation\n\nPlease deliver documentation of the server that clearly explains the goals of this project and clarifies the API response that is expected.\n\n#### Success Criteria\n\n1. A pull request against `master` of your fork with a clear description of the change and purpose and merge it\n3. **[BONUS]** Create an easy way to deploy and view the documentation in a web format and include instructions to do so\n\n### Implement Tooling\n\nPlease implement the following tooling:\n\n1. `eslint` - for linting\n2. `nyc` - for code coverage\n3. `pre-push` - for git pre push hook running tests\n4. `winston` - for logging\n\n#### Success Criteria\n\n1. Create a pull request against `master` of your fork with the new tooling and merge it\n    1. `eslint` should have an opinionated format\n    2. `nyc` should aim for test coverage of `80%` across lines, statements, and branches\n    3. `pre-push` should run the tests before allowing pushing using `git`\n    4. `winston` should be used to replace console logs and all errors should be logged as well. Logs should go to disk.\n2. Ensure that tooling is connected to `npm test`\n3. Create a separate pull request against `master` of your fork with the linter fixes and merge it\n4. Create a separate pull request against `master` of your fork to increase code coverage to acceptable thresholds and merge it\n5. **[BONUS]** Add integration to CI such as Travis or Circle\n6. **[BONUS]** Add Typescript support\n\n### Implement Pagination\n\nPlease implement pagination to retrieve pages of the resource `rides`.\n\n1. Create a pull request against `master` with your changes to the `GET /rides` endpoint to support pagination including:\n    1. Code changes\n    2. Tests\n    3. Documentation\n2. Merge the pull request\n\n### Refactoring\n\nPlease implement the following refactors of the code:\n\n1. Convert callback style code to use `async/await`\n2. Reduce complexity at top level control flow logic and move logic down and test independently\n3. **[BONUS]** Split between functional and imperative function and test independently\n\n#### Success Criteria\n\n1. A pull request against `master` of your fork for each of the refactors above with:\n    1. Code changes\n    2. Tests\n\n### Security\n\nPlease implement the following security controls for your system:\n\n1. Ensure the system is not vulnerable to [SQL injection](https://www.owasp.org/index.php/SQL_Injection)\n2. **[BONUS]** Implement an additional security improvement of your choice\n\n#### Success Criteria\n\n1. A pull request against `master` of your fork with:\n    1. Changes to the code\n    2. Tests ensuring the vulnerability is addressed\n\n### Load Testing\n\nPlease implement load testing to ensure your service can handle a high amount of traffic\n\n#### Success Criteria\n\n1. Implement load testing using `artillery`\n    1. Create a PR against `master` of your fork including artillery\n    2. Ensure that load testing is able to be run using `npm test:load`. You can consider using a tool like `forever` to spin up a daemon and kill it after the load test has completed.\n    3. Test all endpoints under at least `100 rps` for `30s` and ensure that `p99` is under `50ms`\n",
    "longname": "D:\\Projects\\raph\\backend-coding-test-master\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"backend-coding-test\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"A coding assessment for Xendit backend interviews\",\r\n  \"main\": \"index.js\",\r\n  \"directories\": {\r\n    \"test\": \"tests\"\r\n  },\r\n  \"scripts\": {\r\n    \"linter\": \"yarn run eslint\",\r\n    \"test\": \"nyc mocha ./tests/*.test.js --exit --inspect=0.0.0.0:9229 --timeout 120000\",\r\n    \"start\": \"yarn test && yarn docs && node index.js\",\r\n    \"docs\": \"./node_modules/.bin/esdoc -c .esdoc.json\"\r\n  },\r\n  \"pre-push\": [\r\n    \"linter\",\r\n    \"test\"\r\n  ],\r\n  \"keywords\": [\r\n    \"Xendit\"\r\n  ],\r\n  \"author\": \"Bo\",\r\n  \"license\": \"ISC\",\r\n  \"dependencies\": {\r\n    \"body-parser\": \"^1.19.0\",\r\n    \"esdoc\": \"^1.1.0\",\r\n    \"esdoc-standard-plugin\": \"^1.0.0\",\r\n    \"eslint-config-airbnb\": \"^18.2.1\",\r\n    \"express\": \"^4.16.4\",\r\n    \"sqlite3\": \"^4.0.6\",\r\n    \"swagger-ui-express\": \"^4.1.6\",\r\n    \"winston\": \"^3.3.3\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@typescript-eslint/eslint-plugin\": \"^4.12.0\",\r\n    \"@typescript-eslint/parser\": \"^4.12.0\",\r\n    \"chai\": \"^4.2.0\",\r\n    \"chai-http\": \"^4.3.0\",\r\n    \"eslint\": \"^7.17.0\",\r\n    \"eslint-plugin-import\": \"^2.22.1\",\r\n    \"mocha\": \"^6.1.4\",\r\n    \"nyc\": \"^15.1.0\",\r\n    \"pre-push\": \"^0.1.1\",\r\n    \"supertest\": \"^4.0.2\",\r\n    \"typescript\": \"^4.1.3\"\r\n  }\r\n}\r\n",
    "longname": "D:\\Projects\\raph\\backend-coding-test-master\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "content": "# Xendit Coding Exercise\n\nThe goal of these exercises are to assess your proficiency in software engineering that is related to the daily work that we do at Xendit. Please follow the instructions below to complete the assessment.\n\n## Setup\n\n1. Create a new repository in your own github profile named `backend-coding-test` and commit the contents of this folder\n2. Ensure `node (>8.6 and <= 10)` and `npm` are installed\n3. Run `npm install`\n4. Run `npm test`\n5. Run `npm start`\n6. Hit the server to test health `curl localhost:8010/health` and expect a `200` response \n\n## Tasks\n\nBelow will be your set of tasks to accomplish. Please work on each of these tasks in order. Success criteria will be defined clearly for each task\n\n1. [Documentation](#documentation)\n2. [Implement Tooling](#implement-tooling)\n3. [Implement Pagination](#implement-pagination)\n4. [Refactoring](#refactoring)\n5. [Security](#security)\n6. [Load Testing](#load-testing)\n\n### Documentation\n\nPlease deliver documentation of the server that clearly explains the goals of this project and clarifies the API response that is expected.\n\n#### Success Criteria\n\n1. A pull request against `master` of your fork with a clear description of the change and purpose and merge it\n3. **[BONUS]** Create an easy way to deploy and view the documentation in a web format and include instructions to do so\n\n### Implement Tooling\n\nPlease implement the following tooling:\n\n1. `eslint` - for linting\n2. `nyc` - for code coverage\n3. `pre-push` - for git pre push hook running tests\n4. `winston` - for logging\n\n#### Success Criteria\n\n1. Create a pull request against `master` of your fork with the new tooling and merge it\n    1. `eslint` should have an opinionated format\n    2. `nyc` should aim for test coverage of `80%` across lines, statements, and branches\n    3. `pre-push` should run the tests before allowing pushing using `git`\n    4. `winston` should be used to replace console logs and all errors should be logged as well. Logs should go to disk.\n2. Ensure that tooling is connected to `npm test`\n3. Create a separate pull request against `master` of your fork with the linter fixes and merge it\n4. Create a separate pull request against `master` of your fork to increase code coverage to acceptable thresholds and merge it\n5. **[BONUS]** Add integration to CI such as Travis or Circle\n6. **[BONUS]** Add Typescript support\n\n### Implement Pagination\n\nPlease implement pagination to retrieve pages of the resource `rides`.\n\n1. Create a pull request against `master` with your changes to the `GET /rides` endpoint to support pagination including:\n    1. Code changes\n    2. Tests\n    3. Documentation\n2. Merge the pull request\n\n### Refactoring\n\nPlease implement the following refactors of the code:\n\n1. Convert callback style code to use `async/await`\n2. Reduce complexity at top level control flow logic and move logic down and test independently\n3. **[BONUS]** Split between functional and imperative function and test independently\n\n#### Success Criteria\n\n1. A pull request against `master` of your fork for each of the refactors above with:\n    1. Code changes\n    2. Tests\n\n### Security\n\nPlease implement the following security controls for your system:\n\n1. Ensure the system is not vulnerable to [SQL injection](https://www.owasp.org/index.php/SQL_Injection)\n2. **[BONUS]** Implement an additional security improvement of your choice\n\n#### Success Criteria\n\n1. A pull request against `master` of your fork with:\n    1. Changes to the code\n    2. Tests ensuring the vulnerability is addressed\n\n### Load Testing\n\nPlease implement load testing to ensure your service can handle a high amount of traffic\n\n#### Success Criteria\n\n1. Implement load testing using `artillery`\n    1. Create a PR against `master` of your fork including artillery\n    2. Ensure that load testing is able to be run using `npm test:load`. You can consider using a tool like `forever` to spin up a daemon and kill it after the load test has completed.\n    3. Test all endpoints under at least `100 rps` for `30s` and ensure that `p99` is under `50ms`\n",
    "longname": "D:\\Projects\\raph\\backend-coding-test-master\\Readme.md",
    "name": "./Readme.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "D:\\Projects\\raph\\backend-coding-test-master\\manual\\overview.md",
    "name": "./manual/overview.md",
    "content": "# Overview\r\n\r\n## API\r\n\r\n| Link   |      Method      |  Description |\r\n|:----------|:-------------|:------|\r\n| / |  N/A | User Manual |\r\n| /api-docs |    N/A   |   API Documentation |\r\n| /health | GET |    Checks system status |\r\n| /rides | POST |    Creates a new ride in the system |\r\n| /rides | GET |    Get all rides from the system |\r\n| /rides/:id | GET |    Get specific ride from the system |\r\n\r\n## Tasks\r\n\r\n1. Documentation\r\n2. Implement Tooling\r\n3. Implement Pagination\r\n4. Refactoring\r\n5. Security\r\n6. Load Testing\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "D:\\Projects\\raph\\backend-coding-test-master\\manual\\documentation.md",
    "name": "./manual/documentation.md",
    "content": "# Documentation\r\n\r\nUsed esdocs for generating user manual and used swagger ui for generating api documentation.\r\n\r\n## Esdocs\r\n\r\n1. Add esdocs using `yarn add esdoc esdoc-standard-plugin`\r\n2. Create .esdoc.json file - ensure that it is utf-8 encoded or else the next step won't work.\r\n3. Run `yarn docs` - this will call ./node_modules/.bin/esdoc and will generate the docs folder which contains the html files for documentation.\r\n4. Expose through the api using express static\r\n\r\n## Swagger UI\r\n\r\n1. Add swagger-ui-express using `yarn add swagger-ui-express`\r\n2. Add a way to automatically generate the file swagger.json (see src/swagger.js)\r\n2. Modify the routes to provide general information that swagger requires in order to list the apis properly.",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "D:\\Projects\\raph\\backend-coding-test-master\\manual\\tooling.md",
    "name": "./manual/tooling.md",
    "content": "# Tooling\r\n\r\n## eslint\r\n\r\nRun using `yarn run eslint` or `yarn linter`\r\n\r\n1. How would you like to use ESLint? `style`\r\n2. What type of modules does your project use? `commonjs`\r\n3. Which framework does your project use? `none`\r\n4. Does your project use Typescript? `Yes`\r\n5. Where do your code run? `browser, node`\r\n6. What format do you want your config file to be in? `YAML`\r\n7. How would you like to define a style for your project? `guide`\r\n8. Which style guide do you want to follow? `airbnb`\r\n\r\n## nyc\r\n\r\nRun using `nyc mocha ./tests/*.test.js --exit --inspect=0.0.0.0:9229 --timeout 120000` or `yarn test`\r\n\r\nAs of `tooling-nyc`\r\n\r\nFile        | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s\r\n:-----------|:--------|:---------|:--------|:--------|:--------------------------------------\r\nAll files   |    87.8 |     82.5 |     100 |   87.65 | \r\n app.js     |     100 |      100 |     100 |     100 | \r\n logger.js  |     100 |      100 |     100 |     100 | \r\n routes.js  |   82.76 |    81.58 |     100 |   82.46 | 92-93,101-102,126-127,134-135,168-169\r\n schemas.js |     100 |      100 |     100 |     100 |                                       \r\n\r\n## pre-push\r\n\r\n## winston\r\n\r\nLogs are saved in ./logs folder using unix timestamp as filename",
    "static": true,
    "access": "public"
  }
]